# Generated by Django 5.2.7 on 2025-10-23 00:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ingredient name', max_length=200, unique=True)),
                ('category', models.CharField(choices=[('VEGETABLES', 'Vegetables'), ('FRUITS', 'Fruits'), ('MEAT', 'Meat'), ('SEAFOOD', 'Seafood'), ('DAIRY', 'Dairy'), ('GRAINS', 'Grains'), ('SPICES', 'Spices'), ('BEVERAGES', 'Beverages'), ('OTHER', 'Other')], default='OTHER', help_text='Ingredient category (RF-02)', max_length=20)),
                ('unit', models.CharField(choices=[('KG', 'Kilogram'), ('G', 'Gram'), ('L', 'Liter'), ('ML', 'Milliliter'), ('PC', 'Piece'), ('DZ', 'Dozen'), ('LB', 'Pound'), ('OZ', 'Ounce')], default='KG', help_text='Unit of measurement', max_length=5)),
                ('cost_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost per unit (for analytics - RF-06)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('supplier', models.CharField(blank=True, help_text='Primary supplier', max_length=200)),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Minimum stock level for alerts (RF-02)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('description', models.TextField(blank=True, help_text='Additional information')),
                ('is_active', models.BooleanField(default=True, help_text='Is this ingredient currently in use?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'db_table': 'ingredients',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['category'], name='ingredients_categor_ed8c56_idx'), models.Index(fields=['is_active'], name='ingredients_is_acti_35e133_idx')],
            },
        ),
        migrations.CreateModel(
            name='InventoryStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current quantity in stock (RF-02)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('last_restocked', models.DateTimeField(blank=True, help_text='Last restock date', null=True)),
                ('expiration_date', models.DateField(blank=True, help_text='Expiration date (if applicable)', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient', models.OneToOneField(help_text='Related ingredient', on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='inventario.ingredient')),
            ],
            options={
                'verbose_name': 'Inventory Stock',
                'verbose_name_plural': 'Inventory Stocks',
                'db_table': 'inventory_stock',
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('RESTOCK', 'Restock'), ('USAGE', 'Usage (Order)'), ('ADJUSTMENT', 'Manual Adjustment'), ('WASTE', 'Waste/Spoilage'), ('RETURN', 'Return to Supplier')], help_text='Type of transaction (RF-02)', max_length=20)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity changed (positive for add, negative for deduct)', max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, help_text='Stock balance after transaction', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Transaction notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Transaction timestamp (traceability)')),
                ('ingredient', models.ForeignKey(help_text='Related ingredient', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventario.ingredient')),
            ],
            options={
                'verbose_name': 'Inventory Transaction',
                'verbose_name_plural': 'Inventory Transactions',
                'db_table': 'inventory_transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]

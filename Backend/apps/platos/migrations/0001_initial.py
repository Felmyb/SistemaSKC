# Generated by Django 5.2.7 on 2025-10-23 00:15

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventario', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Dish name', max_length=200, unique=True)),
                ('description', models.TextField(help_text='Dish description (RNF-06 - Accessibility)')),
                ('category', models.CharField(choices=[('APPETIZER', 'Appetizer'), ('SOUP', 'Soup'), ('SALAD', 'Salad'), ('MAIN_COURSE', 'Main Course'), ('SIDE_DISH', 'Side Dish'), ('DESSERT', 'Dessert'), ('BEVERAGE', 'Beverage'), ('SPECIAL', 'Special')], default='MAIN_COURSE', help_text='Dish category (RF-01)', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, help_text='Selling price', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('preparation_time', models.PositiveIntegerField(default=15, help_text='Average preparation time in minutes (RF-01, RF-04)')),
                ('image', models.ImageField(blank=True, help_text='Dish image', null=True, upload_to='dishes/')),
                ('is_available', models.BooleanField(default=True, help_text='Is this dish currently available? (RF-01)')),
                ('is_vegetarian', models.BooleanField(default=False, help_text='Is this dish vegetarian?')),
                ('is_vegan', models.BooleanField(default=False, help_text='Is this dish vegan?')),
                ('allergens', models.TextField(blank=True, help_text='Allergen information (RNF-06 - Safety)')),
                ('popularity_score', models.IntegerField(default=0, help_text='Popularity score for recommendations (RF-03, RF-06)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dish',
                'verbose_name_plural': 'Dishes',
                'db_table': 'dishes',
                'ordering': ['category', 'name'],
                'indexes': [models.Index(fields=['category', 'is_available'], name='dishes_categor_0e0c82_idx'), models.Index(fields=['-popularity_score'], name='dishes_popular_6d2f03_idx')],
            },
        ),
        migrations.CreateModel(
            name='RecipeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity needed per serving (RF-02)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('notes', models.TextField(blank=True, help_text='Preparation notes or special instructions')),
                ('dish', models.ForeignKey(help_text='Related dish', on_delete=django.db.models.deletion.CASCADE, related_name='recipe_items', to='platos.dish')),
                ('ingredient', models.ForeignKey(help_text='Required ingredient (RF-02)', on_delete=django.db.models.deletion.PROTECT, related_name='recipe_items', to='inventario.ingredient')),
            ],
            options={
                'verbose_name': 'Recipe Item',
                'verbose_name_plural': 'Recipe Items',
                'db_table': 'recipe_items',
                'unique_together': {('dish', 'ingredient')},
            },
        ),
    ]

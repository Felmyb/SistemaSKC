# SmartKitchen Connect - Docker Configuration
# Standard: IEEE 830 | Requirement: RNF-05 (Portability)

version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: smartkitchen_db
    environment:
      POSTGRES_DB: ${DB_NAME:-smartkitchen_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - smartkitchen_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  # Redis Cache Service (for Celery and caching)
  redis:
    image: redis:7-alpine
    container_name: smartkitchen_redis
    ports:
      - "6379:6379"
    networks:
      - smartkitchen_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
  
  # Django Backend Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: smartkitchen_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 4"
    volumes:
      - ./Backend:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    env_file:
      - ./Backend/.env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smartkitchen_network
    restart: unless-stopped
  
  # Celery Worker Service (for background tasks)
  celery_worker:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: smartkitchen_celery
    command: celery -A config worker -l info
    volumes:
      - ./Backend:/app
    env_file:
      - ./Backend/.env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - smartkitchen_network
    restart: unless-stopped
  
  # Celery Beat Service (for scheduled tasks)
  celery_beat:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: smartkitchen_celery_beat
    command: celery -A config beat -l info
    volumes:
      - ./Backend:/app
    env_file:
      - ./Backend/.env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - smartkitchen_network
    restart: unless-stopped
  
  # Nginx Web Server (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: smartkitchen_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./IAC/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
    depends_on:
      - backend
    networks:
      - smartkitchen_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  smartkitchen_network:
    driver: bridge
